{"version":3,"sources":["Components/UserFn/index.module.css","reportWebVitals.ts","utils/baseServer.js","utils/request.js","Components/Viewable/index.tsx","Components/ListsPage/index.tsx","Components/Allocation/index.tsx","Components/UserFn/index.tsx","Layout/index.tsx","pages/FormLists/index.tsx","pages/Viewable/index.tsx","pages/Allocation/index.tsx","routes/index.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","baseUrl","setUrlEncoded","obj","urlEncoded","Object","keys","length","forEach","key","index","locationQueryIsEn","href","window","location","isEn","indexOf","queryStr","split","item","splitQuery","proxyRequest","url","options","new_url","newOptions","credentials","data","lan","method","contentType","headers","Accept","JSON","stringify","axios","request","response","status","e","Error","code","message","catch","g_app","_store","dispatch","type","get","post","put","delete","Select","Option","createDndContext","HTML5Backend","UserFn","useState","name","user","setUser","useEffect","id","res","ToggleMenu","onClick","Item","icon","UserOutlined","className","styles","header_right","overlay","user_dropdown","placement","username","Header","Layout","Content","Footer","AYDemo","props","children","menu","flex","style","display","theme","mode","arg","keyPath","selectedKeys","defaultSelectedKeys","VideoCameraOutlined","to","margin","padding","minHeight","textAlign","ListsPage","prop","history","useHistory","Form","useForm","form","business","setBusiness","formList","setFormList","isModalVisible","setIsModalVisible","loading","setLoading","page","pageSize","listParams","handleGetFormList","p","columns","title","dataIndex","render","text","record","size","val","console","log","cur","filter","fid","push","handleAllocation","handleInput","onConfirm","pa","parse","info","delForm","okText","cancelText","handleOk","submit","handleCancel","onFinish","values","resetFields","Fragment","background","marginBottom","gutter","span","label","width","onChange","placeholder","map","value","htmlType","visible","onOk","onCancel","footer","labelCol","wrapperCol","rules","required","rowKey","dataSource","bordered","Viewable","useLocation","lists","setLists","setDataSource","formInfo","setFormInfo","update","setUpdate","formId","setFormId","fId","URLSearchParams","search","Promise","resolve","reject","tempArr","newArr","i","rowId","row_id","field_name","field","concat","uuid","uuidv4","isRequired","initialValue","default_value","hasFeedback","v","k","noStyle","min","Group","float","fontSize","RNDContext","Allocation","controlerType","setControlerType","controlerName","controlerPlaceholder","controlerDefaultValue","danger","delData","shape","DeleteOutlined","components","body","row","vaue","moveRow","restProps","ref","React","useRef","useDrop","accept","collect","monitor","dragIndex","getItem","isOver","dropClassName","drop","useDrag","isDragging","drag","cursor","DragableBodyRow","useCallback","hoverIndex","dragRow","originRow","targetRow","param","originId","originSort","sort","targetId","targetSort","updateImmutability","$splice","manager","orientation","option","includes","xs","offset","sm","valuePropName","PlusOutlined","DndProvider","current","dragDropManager","onRow","Routes","exact","path","FormLists","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.591ef849.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_right\":\"UserFn_header_right__10BqY\",\"username\":\"UserFn_username__3vBQF\",\"user_dropdown\":\"UserFn_user_dropdown__3M1F9\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","// export const baseUrl =  'http://www.cumquats.cn';\r\nexport const baseUrl =  'http://localhost:4000';\r\n\r\nexport const setFormData = (obj) => {\r\n    const formData = new FormData();\r\n    if (obj && obj instanceof Object) {\r\n        const keys = Object.keys(obj);\r\n        if (keys && keys.length) {\r\n            keys.forEach(key => {\r\n                formData.append(key, obj[key]);\r\n            });\r\n        }\r\n    }\r\n    return formData;\r\n};\r\n\r\nexport const setUrlEncoded = (obj) => {\r\n    let urlEncoded = '';\r\n    if(obj && obj instanceof Object) {\r\n        const keys = Object.keys(obj);\r\n        if(keys && keys.length) {\r\n            keys.forEach((key, index) => {\r\n                urlEncoded += `${key}=${obj[key]}`;\r\n                if(index + 1 < keys.length){\r\n                    urlEncoded += '&';\r\n                }\r\n            });\r\n        }\r\n    }\r\n    return urlEncoded;\r\n}\r\n","import axios from 'axios';\r\nimport { notification } from 'antd';\r\nimport { setUrlEncoded } from './baseServer';\r\n// import { getToken, setToken } from './token';\r\n// import router from 'umi/router';\r\nconst codeMessage = {\r\n  200: '服务器成功返回请求的数据。',\r\n  201: '新建或修改数据成功。',\r\n  202: '一个请求已经进入后台排队（异步任务）。',\r\n  204: '删除数据成功。',\r\n  400: '发出的请求有错误，服务器没有进行新建或修改数据的操作。',\r\n  401: '用户没有权限（令牌、用户名、密码错误）。',\r\n  403: '用户得到授权，但是访问是被禁止的。',\r\n  404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\r\n  406: '请求的格式不可得。',\r\n  410: '请求的资源被永久删除，且不会再得到的。',\r\n  422: '当创建一个对象时，发生一个验证错误。',\r\n  500: '服务器发生错误，请检查服务器。',\r\n  502: '网关错误。',\r\n  503: '服务不可用，服务器暂时过载或维护。',\r\n  504: '网关超时。',\r\n};\r\n\r\nfunction checkStatus(response) {\r\n  if (response.status >= 200 && response.status < 300) {\r\n    return response;\r\n  }\r\n  const errorText = codeMessage[response.status] || response.statusText;\r\n  notification.error({\r\n    message: '请求错误',\r\n    description: errorText,\r\n  });\r\n  const error = new Error(errorText);\r\n  error.name = response.status;\r\n  error.response = response;\r\n  throw error;\r\n}\r\n\r\nfunction locationQueryIsEn() {\r\n  const href = window.location.href;\r\n  let isEn = false;\r\n  if (href.indexOf(\"?\") >= 0) {\r\n    const queryStr = href.split(\"?\");\r\n    if (queryStr[1].indexOf(\"&\") >= 0) {\r\n      const queryArr = queryStr[1].split(\"&\");\r\n      queryArr.forEach(item => {\r\n        const splitQuery = item.split(\"=\");\r\n        if (splitQuery[0] === \"lan\" && splitQuery[1] === \"en\") {\r\n          isEn = true\r\n        }\r\n      })\r\n    } else if (queryStr[1]) {\r\n      const splitQuery = queryStr[1].split(\"=\");\r\n      if (splitQuery[0] === \"lan\" && splitQuery[1] === \"en\") {\r\n        isEn = true\r\n      }\r\n    }\r\n  }\r\n  return isEn\r\n}\r\n\r\n/**\r\n * Requests a URL, returning a promise.\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param  {object} [options] The options we want to pass to \"\"\r\n * @return {object}           An object containing either \"data\" or \"err\"\r\n */\r\nfunction request(url, options) {\r\n  const defaultOptions = {\r\n    credentials: 'include',\r\n  };\r\n  const newOptions = { ...defaultOptions, ...options };\r\n  // body 添加token\r\n  // if (getToken()) {\r\n  //   if (newOptions.body) {\r\n  //     newOptions.body.token = getToken();\r\n  //   } else {\r\n  //     newOptions.body = {\r\n  //       token: getToken(),\r\n  //     };\r\n  //   }\r\n  // }\r\n  if (locationQueryIsEn()) {\r\n    newOptions.data.lan = \"en\";\r\n  }\r\n  let new_url;\r\n  if (\r\n    newOptions.method === 'POST' ||\r\n    newOptions.method === 'PUT' ||\r\n    newOptions.method === 'DELETE'\r\n  ) {\r\n    if (newOptions.contentType === 'application/json') {\r\n      newOptions.headers = {\r\n        Accept: 'text/html',\r\n        'Content-Type': 'application/json',\r\n        ...newOptions.headers,\r\n      };\r\n      newOptions.data = JSON.stringify(newOptions.data);\r\n    } else if (newOptions.contentType === 'formData') {\r\n      newOptions.headers = {\r\n        Accept: 'application/json',\r\n        ...newOptions.headers,\r\n      };\r\n    } else {\r\n      newOptions.headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        ...newOptions.headers,\r\n      };\r\n      if (newOptions.data) {\r\n        newOptions.data = setUrlEncoded(newOptions.data);\r\n      }\r\n    }\r\n    new_url = url\r\n  } else if (newOptions.method === 'GET') {\r\n    new_url = url + '?' + setUrlEncoded(newOptions.data)\r\n    delete newOptions.data\r\n  }\r\n\r\n  const para = {\r\n    url: new_url,\r\n    data: newOptions.data,\r\n    ...newOptions,\r\n  }\r\n  // console.log(para)\r\n  return axios(new_url, newOptions);\r\n  // return fetch(new_url, newOptions)\r\n  //   .then(checkStatus)\r\n  //   .then((response) => {\r\n  //     return response.json();\r\n  //   });\r\n}\r\n\r\n/**\r\n *  the proxy of request\r\n * @param url\r\n * @param options\r\n * @returns {*}\r\n */\r\nfunction proxyRequest(url, options) {\r\n  options = options || {};\r\n  return request(url, options).then((response) => {\r\n    // if (response && response.token) {\r\n    //     setToken(response.token);\r\n    // }\r\n    if (response.status === 200) {\r\n      // return response.data || {};\r\n      return response.data || {};\r\n    }\r\n    const e = new Error();\r\n    e.code = response.code;\r\n    e.message = response.message || `Failed to get data code : ${e.code}`;\r\n    throw e;\r\n  }).catch((e,url) => {\r\n    const status = e.code;\r\n      if (status === 401) {\r\n        // @HACK\r\n        /* eslint-disable no-underscore-dangle */\r\n        window.g_app._store.dispatch({\r\n          type: 'login/logout',\r\n        });\r\n        return;\r\n      }\r\n      if (status === 403) {\r\n        if (locationQueryIsEn()) {\r\n          // router.push('/login?lan=en');\r\n        } else {\r\n          // router.push('/login');\r\n        }\r\n        return;\r\n      }\r\n      if (status <= 504 && status >= 500) {\r\n        // router.push('/login');\r\n        return;\r\n      }\r\n      if (status >= 404 && status < 422) {\r\n        // router.push('/404');\r\n        return;\r\n      }\r\n  });\r\n}\r\n\r\nproxyRequest.get = (url, data, options) => {\r\n  options = options || {};\r\n  options.data = data || {};\r\n  options.method = 'GET';\r\n  return proxyRequest(url, options);\r\n};\r\n\r\nproxyRequest.post = (url, data, options) => {\r\n  options = options || {};\r\n  options.data = data || {};\r\n  options.method = 'POST';\r\n  return proxyRequest(url, options);\r\n};\r\n\r\nproxyRequest.put = (url, data, options) => {\r\n  options = options || {};\r\n  options.data = data || {};\r\n  options.method = 'PUT';\r\n  return proxyRequest(url, options);\r\n};\r\n\r\nproxyRequest.delete = (url, data, options) => {\r\n  options = options || {};\r\n  options.data = data || {};\r\n  options.method = 'DELETE';\r\n  return proxyRequest(url, options);\r\n};\r\n\r\nexport default proxyRequest;\r\n","import React, {FC, useState, useEffect} from 'react';\r\nimport {\r\n  Input,\r\n  Form,\r\n  Radio,\r\n  InputNumber,\r\n  Select,\r\n  Button,\r\n  message,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Table\r\n} from 'antd';\r\nimport { baseUrl } from '../../utils/baseServer';\r\nimport proxyRequest from '../../utils/request';\r\nimport history from 'history/browser';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nconst { Option } = Select;\r\n\r\nconst Viewable: FC = function() {\r\n\r\n  let [lists, setLists] = useState([]);\r\n  let [dataSource, setDataSource] = useState([]);\r\n  let [formInfo, setFormInfo] = useState({name: \"\"});\r\n  const [update, setUpdate] = useState(false);\r\n  const [formId, setFormId] = useState(\"\");\r\n  const [listParams, setListParams] = useState({page: 1, pageSize: 30});\r\n\r\n  // useEffect(() => {\r\n  //   if (formId) {\r\n  //     proxyRequest.get(baseUrl + `/getFormInfo`, {id: formId}).then(function(res: any) {\r\n  //       if (res) {\r\n  //         setFormInfo(res.data)\r\n  //       }\r\n  //     });\r\n  //   }\r\n  // }, [formId])\r\n\r\n  useEffect(() => {\r\n    const {search = \"\"} = history.location;\r\n    let pa = JSON.parse(JSON.stringify(listParams));\r\n    if (search) {\r\n      const q1 = search.split(\"?\");\r\n      if (q1.length > 1) {\r\n        // TODO: 支持一个参数formId\r\n        const q2 = q1[1].split(\"=\");\r\n        if (q2.length > 1) {\r\n          pa.formId = q2[1];\r\n          setFormId(q2[1])\r\n        }\r\n      }\r\n    }\r\n\r\n    if (formId) {\r\n\r\n      new Promise<void>((resolve, reject) => {\r\n        proxyRequest.get(baseUrl + `/lists`, pa).then(function(res: any) {\r\n          if (res) {\r\n            setLists(res.data)\r\n            resolve()\r\n          }\r\n        })\r\n      })\r\n      .then(() => {\r\n        proxyRequest.get(baseUrl + `/getFormData`, {id: formId}).then(function(res: any) {\r\n          let tempArr = [], newArr: any = [];\r\n          if (res) {\r\n            \r\n            for (let i = 0; i < res.data.length; i++) {\r\n              const rowId = res.data[i].row_id;\r\n              \r\n              if (tempArr.indexOf(rowId) === -1) {\r\n                tempArr.push(rowId);\r\n              }\r\n\r\n              let index = tempArr.indexOf(rowId);\r\n  \r\n              if (index >= 0) {\r\n                newArr[index] = newArr[index] || {rowId};\r\n\r\n                newArr[index][res.data[i].field_name] = res.data[i].value;\r\n              }\r\n            }\r\n            \r\n            setDataSource(newArr)\r\n          }\r\n        });\r\n      })\r\n      \r\n      proxyRequest.get(baseUrl + `/getFormInfo`, {id: formId}).then(function(res: any) {\r\n        if (res) {\r\n          setFormInfo(res.data)\r\n        }\r\n      });\r\n\r\n    }\r\n  }, [formId, listParams, update])\r\n\r\n  // useEffect(() => {\r\n  //   const {search = \"\"} = history.location;\r\n  //   let pa = JSON.parse(JSON.stringify(listParams));\r\n  //   if (search) {\r\n  //     const q1 = search.split(\"?\");\r\n  //     if (q1.length > 1) {\r\n  //       // TODO: 支持一个参数formId\r\n  //       const q2 = q1[1].split(\"=\");\r\n  //       if (q2.length > 1) {\r\n  //         pa.formId = q2[1];\r\n  //         setFormId(q2[1])\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   proxyRequest.get(baseUrl + `/lists`, pa).then(function(res: any) {\r\n  //     if (res) {\r\n  //       setLists(res.data)\r\n  //     }\r\n  //   });\r\n\r\n  // }, [listParams]);\r\n\r\n  const onFinish = (values: any) => {\r\n    values.formId = formId;\r\n    values.uuid = uuidv4();\r\n    proxyRequest.post(baseUrl + \"/save\", values)\r\n      .then(function(res: any) {\r\n        if (res && res.code === 0) {\r\n          message.info('保存成功！');\r\n          setUpdate(!update)\r\n        }\r\n      });\r\n  };\r\n\r\n  const formItemLayout = {\r\n    labelCol: {span: 6},\r\n    wrapperCol: {span: 18}\r\n  }\r\n\r\n  const handleDelData = (e: any) : void => {\r\n    proxyRequest.post(baseUrl + \"/delData\", {id: e.rowId})\r\n    .then(function(res: any) {\r\n      if (res && res.code === 0) {\r\n        message.info('删除成功！');\r\n        setUpdate(!update)\r\n      }\r\n    });\r\n  }\r\n\r\n  interface Action {\r\n    title: string;\r\n    key: string;\r\n    dataIndex?: string;\r\n    render?: (s: string, r: any) => any\r\n  }\r\n  const columns = lists.map((item: any): Action => {\r\n    return {\r\n      title: item.name,\r\n      dataIndex: item.field,\r\n      key: item.id,\r\n    }\r\n  }).concat({\r\n    title: \"操作\", \r\n    key: \"action\",\r\n    render: (text, record) => {\r\n      return <a onClick={() => handleDelData(record)}>删除</a>\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={{background: \"#fff\", padding: \"12px 15px\", marginBottom: 20}}>\r\n        <Form\r\n          name=\"validate_other\"\r\n          {...formItemLayout}\r\n          onFinish={onFinish}\r\n        >\r\n          <Row gutter={24}>\r\n          {\r\n                lists.map(function(item: any) {\r\n                  let options = [];\r\n                  if (item.options) {\r\n                    options = item.options.split(\"/\");\r\n                  }\r\n                  // \r\n                  let rules = [];\r\n                  if (item.isRequired === '1') {\r\n                    rules.push({\r\n                      required: true, \r\n                      message: item.placeholder\r\n                    })\r\n                  }\r\n                  //\r\n                  if (item.code === \"1\") {\r\n                    return (\r\n                      <Col span={8} key={item.id}>\r\n                        <Form.Item\r\n                          initialValue={item.default_value}\r\n                          name={item.field}\r\n                          rules={rules}\r\n                          label={item.name}\r\n                        >\r\n                          <Input placeholder={item.placeholder} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    )\r\n                  }\r\n                  if (item.code === \"2\") {\r\n                    return (\r\n                      <Col span={8} key={item.id}>\r\n                        <Form.Item\r\n                          name={item.field}\r\n                          label={item.name}\r\n                          hasFeedback\r\n                          initialValue={item.default_value}\r\n                          rules={rules}\r\n                        >\r\n                          <Select placeholder={item.placeholder}>\r\n                            {\r\n                              options.map((v:string, k:number) => {\r\n                              return <Option key={k} value={k}>{v}</Option>\r\n                              })\r\n                            }\r\n                          </Select>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    )\r\n                  }\r\n                  if (item.code === \"3\") {\r\n                    return (\r\n                      <Col span={8} key={item.id}>\r\n                        <Form.Item label={item.name}>\r\n                          <Form.Item name={item.field} rules={rules} initialValue={item.default_value} noStyle>\r\n                            <InputNumber style={{width: \"100%\"}} placeholder={item.placeholder} min={0} />\r\n                          </Form.Item>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    )\r\n                  }\r\n                  if (item.code === \"4\") {\r\n                    return (\r\n                      <Col span={8} key={item.id}>\r\n                        <Form.Item name={item.field} initialValue={item.default_value} rules={rules} label={item.name}>\r\n                          <Radio.Group>\r\n                            {\r\n                              options.map((v:string, k:number) => {\r\n                              return <Radio key={k} value={k}>{v}</Radio>\r\n                              })\r\n                            }\r\n                          </Radio.Group>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    )\r\n                  }\r\n                  if (item.code === \"5\") {\r\n                    return (\r\n                      <Col span={8} key={item.id}>\r\n                        <Form.Item label={item.name}>\r\n                          <span className=\"ant-form-text\">纯文本</span>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    )\r\n                  }\r\n                  return null\r\n                })\r\n              }\r\n          </Row>\r\n          <Row>\r\n            <Col span={24}>\r\n              <Button type=\"primary\" style={{float: \"right\"}} htmlType=\"submit\">提交</Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n\r\n      <div style={{background: \"#fff\", padding: \"12px 15px\"}}>\r\n        <Divider style={{marginBottom: 30, fontSize: 20}}>{formInfo.name}</Divider>\r\n        <Table \r\n          rowKey={(e: any) => e.rowId}\r\n          columns={columns}\r\n          dataSource={dataSource}\r\n          size=\"small\"\r\n          bordered\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Viewable;","import React, {FC, useState, useEffect} from 'react';\r\nimport {\r\n  Select,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Popconfirm,\r\n  Row,\r\n  Col\r\n} from 'antd';\r\nimport { baseUrl } from '../../utils/baseServer';\r\nimport proxyRequest from '../../utils/request';\r\nimport history from 'history/browser';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface listsPageProps {\r\n  contentCode: string;\r\n  switchTab: any;\r\n}\r\n\r\nconst ListsPage: FC<listsPageProps> = function(prop) {\r\n  const [form] = Form.useForm();\r\n  const [business, setBusiness] = useState([]);\r\n  const [formList, setFormList] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [listParams, setListParams] = useState({page: 1, pageSize: 10})\r\n\r\n  useEffect(() => {\r\n    proxyRequest.get(baseUrl + `/business`, {}).then(function(res: any) {\r\n      if (res) {\r\n        setBusiness(res.data)\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleGetFormList(listParams)\r\n  }, [listParams])\r\n\r\n\r\n  const handleGetFormList = (p: any) => {\r\n    proxyRequest.get(baseUrl + \"/getFormList\", p)\r\n    .then(function(res: any) {\r\n      if (res && res.code === 0) {\r\n        setFormList(res.data)\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * 删除表单\r\n   */\r\n  const delForm = (val: any) => {\r\n    const pa = JSON.parse(JSON.stringify(listParams));\r\n    // pa.id = val.id;\r\n    proxyRequest.post(baseUrl + \"/delForm\", {id: val.id})\r\n    .then(function(res: any) {\r\n      if (res.code === 0) {\r\n        message.info('删除成功！');\r\n        handleGetFormList(pa);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleAllocation = (record: any) => {\r\n    history.push('/?formId='+ record.id)\r\n    prop.switchTab(\"2\")\r\n  }\r\n\r\n  const handleInput = (record: any) => {\r\n    history.push('/?formId='+ record.id);\r\n    prop.switchTab(\"3\")\r\n  }\r\n\r\n  const handleEditRow = (val: any) => {\r\n    console.log(val)\r\n    setIsModalVisible(true);\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: '表单名',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text: string, record: any) => (\r\n        <Button \r\n          size=\"small\"\r\n          onClick={() => handleEditRow(record)}\r\n          type=\"link\"\r\n        >\r\n          {text}\r\n        </Button>\r\n      ),\r\n    },\r\n    {\r\n      title: '创建时间',\r\n      dataIndex: 'created_date',\r\n      key: 'created_date',\r\n    },\r\n    {\r\n      title: '所属业务',\r\n      key: 'remark',\r\n      render: (text: string, record: any) => {\r\n        if (business.length) {\r\n          const cur: any = business.filter((item: any) => item.id === record.fid);\r\n          if (cur.length) {\r\n            return cur[0].name\r\n          }\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: '备注',\r\n      dataIndex: 'remark',\r\n      key: 'remark',\r\n    },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text: string, record: any) => (\r\n        <Space size=\"middle\">\r\n          <a onClick={() => handleAllocation(record)}>配置</a>\r\n          <a onClick={() => handleInput(record)}>填报</a>\r\n          <Popconfirm\r\n            title=\"确定删除?\"\r\n            onConfirm={() => delForm(record)}\r\n            okText=\"确定\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <a>删除</a>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const handleChange = (e:any) => {\r\n    const pa = JSON.parse(JSON.stringify(listParams));\r\n    pa.id = e;\r\n    proxyRequest.get(baseUrl + \"/getFormList\", pa)\r\n      .then(function(res: any) {\r\n        if (res && res.code === 0) {\r\n          setFormList(res.data)\r\n        }\r\n      });\r\n  }\r\n  /**\r\n   * 新增表单是选择所属业务\r\n   */\r\n  const selectBusinessForAdd = () => {\r\n\r\n  }\r\n  /**\r\n   * 新增表单\r\n   */\r\n  const addForm = () => {\r\n    setIsModalVisible(true)\r\n  };\r\n  /**\r\n   * 确认提交表单\r\n   */\r\n  const handleOk = () => {\r\n    form.submit();\r\n    // setIsModalVisible(false);\r\n  };\r\n  /**\r\n   * 取消关闭表单\r\n   */\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const formItemLayout = {\r\n    labelCol: {span: 6},\r\n    wrapperCol: {span: 18}\r\n  }\r\n  /**\r\n   * 提交\r\n   */\r\n  const onFinish = (values: any) => {\r\n    setLoading(true);\r\n    proxyRequest.post(baseUrl + \"/addForm\", values)\r\n    .then(function(res: any) {\r\n      if (res.code === 0) {\r\n        message.info('新增成功！');\r\n        form.resetFields();\r\n        setLoading(false);\r\n        setIsModalVisible(false);\r\n        handleGetFormList(listParams);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{background: \"#fff\", padding: 15, marginBottom: 20}}>\r\n        <Form\r\n          form={form}\r\n          name=\"advanced_search\"\r\n          className=\"ant-advanced-search-form\"\r\n          onFinish={onFinish}\r\n        >\r\n          <Row gutter={24}>\r\n            <Col span={8}>\r\n              <Form.Item label=\"按业务\">\r\n                <Select style={{ width: 120, marginBottom: 12 }} onChange={handleChange} placeholder=\"请选择业务\">\r\n                  {\r\n                    business.map((item: any) => {\r\n                      return <Option key={item.id} value={item.key}>{item.name}</Option>\r\n                    })\r\n                  }\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={24} style={{ textAlign: 'right' }}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Search\r\n              </Button>\r\n              <Button\r\n                style={{ margin: '0 8px' }}\r\n                onClick={() => {\r\n                  // form.resetFields();\r\n                }}\r\n              >\r\n                Clear\r\n              </Button>\r\n              {/* <a\r\n                style={{ fontSize: 12 }}\r\n                onClick={() => {\r\n                  setExpand(!expand);\r\n                }}\r\n              >\r\n                {expand ? <UpOutlined /> : <DownOutlined />} Collapse\r\n              </a> */}\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div style={{padding: 15, background: \"#fff\"}}>\r\n        <Button style={{marginBottom: 12}} onClick={addForm} type=\"primary\">新建</Button>\r\n        <Modal \r\n          title=\"新增表单\"\r\n          visible={isModalVisible}\r\n          onOk={handleOk} \r\n          onCancel={handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={handleCancel}>\r\n              取消\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}>\r\n              新增\r\n            </Button>,\r\n          ]}  \r\n        >\r\n          <Form\r\n            name=\"validate_other\"\r\n            {...formItemLayout}\r\n            onFinish={onFinish}\r\n            form={form}\r\n          >\r\n            <Form.Item \r\n              label=\"所属业务\"\r\n              name=\"business\"\r\n              rules={[{ required: true, message: '请选择所属业务!' }]}\r\n            >\r\n              <Select onChange={selectBusinessForAdd} placeholder=\"请选择业务\">\r\n                {\r\n                  business.map((item: any) => {\r\n                    return <Option key={item.id} value={item.key}>{item.name}</Option>\r\n                  })\r\n                }\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item label=\"表单名\" name=\"name\" rules={[{ required: true }]}>\r\n              <Input placeholder=\"请输入表单名\" />\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n        <Table \r\n          rowKey={e => e.id}\r\n          columns={columns}\r\n          dataSource={formList}\r\n          size=\"small\"\r\n          bordered\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ListsPage;","import React, {FC, useEffect, useState, useRef, useCallback} from 'react';\r\nimport { Table, Space, Button, Form, Input, Select, Row, Col, Checkbox, message, Divider, Tooltip } from 'antd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport { DndProvider, useDrag, useDrop, createDndContext } from 'react-dnd';\r\nimport updateImmutability from 'immutability-helper';\r\nimport { baseUrl } from '../../utils/baseServer';\r\nimport proxyRequest from '../../utils/request';\r\nimport history from 'history/browser';\r\nimport {\r\n  DeleteOutlined,\r\n  PlusOutlined,\r\n  SearchOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Option = Select.Option;\r\nconst RNDContext = createDndContext(HTML5Backend);\r\nconst type = 'DragableBodyRow';\r\n\r\nconst DragableBodyRow = (value: { [x: string]: any; index: any; moveRow: any; className: any; style: any; }) => {\r\n  const { index, moveRow, className, style, ...restProps } = value;\r\n  const ref = React.useRef();\r\n  const [{ isOver, dropClassName }, drop] = useDrop({\r\n    accept: type,\r\n    collect: monitor => {\r\n      const { index: dragIndex } = monitor.getItem() || {};\r\n      if (dragIndex === index) {\r\n        return {};\r\n      }\r\n      return {\r\n        isOver: monitor.isOver(),\r\n        dropClassName: dragIndex < index ? ' drop-over-downward' : ' drop-over-upward',\r\n      };\r\n    },\r\n    drop: (item: any) => {\r\n      moveRow(item.index, index);\r\n    },\r\n  });\r\n  const [, drag] = useDrag({\r\n    item: { type, index },\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n  drop(drag(ref));\r\n  return (\r\n    <tr\r\n      ref={ref as any}\r\n      className={`${className}${isOver ? dropClassName : ''}`}\r\n      style={{ cursor: 'move', ...style }}\r\n      {...restProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst Allocation: FC = function(props) {\r\n  const [form] = Form.useForm();\r\n  const [lists, setLists] = useState([]);\r\n  const [listParams, setListParams] = useState({page: 1, pageSize: 30});\r\n  const [update, setUpdate] = useState(false);\r\n  const [business, setBusiness] = useState([]);\r\n  const [controlerType, setControlerType] = useState(\"\");\r\n  const [controlerName, setControlerName] = useState(\"\");\r\n  const [controlerPlaceholder, setControlerPlaceholder] = useState(\"\");\r\n  const [controlerDefaultValue, setControlerDefaultValue] = useState(\"\");\r\n  const [formId, setFormId] = useState(\"\");\r\n\r\n  useEffect(function() {\r\n    const {search = \"\"} = history.location;\r\n    let pa = JSON.parse(JSON.stringify(listParams));\r\n    if (search) {\r\n      const q1 = search.split(\"?\");\r\n      if (q1.length > 1) {\r\n        // TODO: 支持一个参数formId\r\n        const q2 = q1[1].split(\"=\");\r\n        if (q2.length > 1) {\r\n          pa.formId = q2[1];\r\n          setFormId(q2[1])\r\n        }\r\n      }\r\n    }\r\n    proxyRequest.get(baseUrl + `/lists`, pa).then(function(res: any) {\r\n      if (res) {\r\n        setLists(res.data)\r\n      }\r\n    });\r\n  }, [listParams, update]);\r\n\r\n  useEffect(function() {\r\n    proxyRequest.get(baseUrl + `/business`, {}).then(function(res: any) {\r\n      if (res) {\r\n        setBusiness(res.data)\r\n      }\r\n    });\r\n    \r\n  }, [])\r\n\r\n  const columns = [\r\n    {\r\n      title: '序号',\r\n      dataIndex: 'sort',\r\n      key: 'sort',\r\n      render: (text: any) => text + 1,\r\n    },\r\n    {\r\n      title: '控件名',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text: any) => (\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n        >\r\n          {text}\r\n        </Button>\r\n      )\r\n    },\r\n    {\r\n      title: '控件类型',\r\n      dataIndex: 'code',\r\n      key: 'code',\r\n    },\r\n    {\r\n      title: '是否必填',\r\n      dataIndex: 'isRequired',\r\n      key: 'isRequired',\r\n      render: (text: any) => text === '1' ? \"是\" : \"否\"\r\n    },\r\n    {\r\n      title: '提示占位符',\r\n      dataIndex: 'placeholder',\r\n      key: 'placeholder',\r\n    },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text: string, record: any) => (\r\n        <Space size=\"middle\">\r\n          <Tooltip title=\"删除\">\r\n            <Button \r\n              danger\r\n              onClick={() => delData(record)}\r\n              shape=\"circle\"\r\n              size=\"small\"\r\n              icon={<DeleteOutlined />}\r\n            />\r\n          </Tooltip>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const delData = (record: any) => { \r\n    proxyRequest.get(baseUrl + \"/delete\", {id: record.id})\r\n    .then(function(res: any) {\r\n      if (res.code === 0) {\r\n        message.info('删除成功！');\r\n        setUpdate(!update)\r\n      }\r\n    });\r\n  }\r\n\r\n  const formItemLayout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 18 },\r\n  };\r\n  const tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 6,\r\n        offset: 0,\r\n      },\r\n      sm: {\r\n        span: 6,\r\n        offset: 2,\r\n      },\r\n    },\r\n  };\r\n  \r\n  const onFinish = (values: any) => {\r\n    console.log('Received values of form: ', values);\r\n    let obj: any = {}\r\n    Object.keys(values).forEach(item => {\r\n      if (values[item]) {\r\n        obj[item] = values[item]\r\n      }\r\n      if (values.required) {\r\n        obj.required = '1'\r\n      }\r\n    })\r\n    obj.sort = lists.length;\r\n    obj.formId = formId;\r\n    proxyRequest.post(baseUrl + \"/add\", obj)\r\n    .then(function(res: any) {\r\n      if (res.code === 0) {\r\n        message.info('添加成功！');\r\n        form.resetFields();\r\n        setUpdate(!update)\r\n      }\r\n    });\r\n  };\r\n\r\n  // const handleChange = (e:any) => {\r\n   \r\n  // }\r\n\r\n  const changeSelect = (value: string, option: any) => {\r\n    setControlerType(value)\r\n  }\r\n\r\n  const components = {\r\n    body: {\r\n      row: (vaue: any) => DragableBodyRow(vaue),\r\n    },\r\n  };\r\n\r\n  const moveRow = useCallback(\r\n    (dragIndex, hoverIndex) => {\r\n      const dragRow = lists[dragIndex];\r\n      const originRow: any = lists[dragIndex];\r\n      const targetRow: any = lists[hoverIndex];\r\n      const param = {\r\n        originId: originRow.id,\r\n        originSort: originRow.sort,\r\n        targetId: targetRow.id,\r\n        targetSort: targetRow.sort\r\n      }\r\n      proxyRequest.post(baseUrl + \"/sort\", param)\r\n      .then(function(res: any) {\r\n        if (res.code === 0) {\r\n          message.info('OK！');\r\n          setUpdate(!update)\r\n          setLists(\r\n            updateImmutability(lists, {\r\n              $splice: [\r\n                [dragIndex, 1],\r\n                [hoverIndex, 0, dragRow],\r\n              ],\r\n            }),\r\n          );\r\n        }\r\n      });\r\n    },\r\n    [lists, update],\r\n  );\r\n\r\n  const manager = useRef(RNDContext);\r\n\r\n  return (\r\n    <div>\r\n      <div style={{background: \"#fff\", padding: 15, marginBottom: 20}}>\r\n        {/* 表单 */}\r\n        <Divider orientation=\"left\">控件属性</Divider>\r\n        <Form\r\n          name=\"validate_other\"\r\n          {...formItemLayout}\r\n          onFinish={onFinish}\r\n          form={form}\r\n        >\r\n          <Row>\r\n            {/* <Col span={8}>\r\n              <Form.Item label=\"业务\">\r\n                <Select onChange={handleChange} placeholder=\"请选择业务\">\r\n                  {\r\n                    business.map((item: any) => {\r\n                      return <Option key={item.id} value={item.key}>{item.name}</Option>\r\n                    })\r\n                  }\r\n                </Select>\r\n              </Form.Item>\r\n            </Col> */}\r\n            <Col span={8}>\r\n              <Form.Item \r\n                label=\"字段标签\"\r\n              >\r\n                <Form.Item name=\"name\" noStyle>\r\n                  <Input value={controlerName} placeholder=\"请输入字段标签\" />\r\n                </Form.Item>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Form.Item \r\n                name=\"field\"\r\n                label=\"字段\"\r\n                hasFeedback\r\n                rules={[{required: true, message: \"请输入字段\"}]}\r\n              >\r\n                <Input placeholder=\"请输入字段\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Form.Item \r\n                label=\"占位提示\"\r\n              >\r\n                <Form.Item name=\"placeholder\" noStyle>\r\n                  <Input value={controlerPlaceholder} placeholder=\"请输入占位提示\" />\r\n                </Form.Item>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Form.Item \r\n                label=\"默认值\"\r\n              >\r\n                <Form.Item name=\"defaultValue\" noStyle>\r\n                  <Input value={controlerDefaultValue} placeholder=\"请输入默认值\" />\r\n                </Form.Item>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Form.Item\r\n                name=\"select\"\r\n                label=\"表单控件\"\r\n                hasFeedback\r\n                rules={[{ required: true, message: '请选择控件类型!' }]}\r\n              >\r\n                <Select onChange={changeSelect} placeholder=\"请选择控件类型\">\r\n                  <Option value=\"3\">数字</Option>\r\n                  <Option value=\"1\">文本</Option>\r\n                  <Option value=\"2\">下拉选择</Option>\r\n                  <Option value=\"4\">单选按钮</Option>\r\n                  <Option value=\"5\">纯文本</Option>\r\n                </Select>\r\n              </Form.Item>  \r\n            </Col>\r\n            {\r\n              [\"2\", \"4\"].includes(controlerType)\r\n              ? (\r\n                <Col span={8}>\r\n                  <Form.Item \r\n                    label=\"控件选项\"\r\n                  >\r\n                    <Form.Item \r\n                      name=\"options\"\r\n                      noStyle\r\n                      hasFeedback\r\n                      rules={[{ required: true, message: '请输入选项' }]}\r\n                    >\r\n                      <Input placeholder=\"输入选项并用'/'隔开\" />\r\n                      {/* <Input addonAfter={<PlusOutlined />} placeholder=\"输入选项并用'/'隔开\" /> */}\r\n                    </Form.Item>\r\n                  </Form.Item>\r\n                </Col>\r\n              )\r\n              : null\r\n            }\r\n            <Col span={8}>\r\n              <Form.Item {...tailFormItemLayout} name=\"required\" valuePropName=\"checked\">\r\n                <Checkbox>\r\n                  是否必填\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Form.Item>\r\n            <Button type=\"primary\" icon={<PlusOutlined />} htmlType=\"submit\">新增</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n      <div style={{background: \"#fff\", padding: 15}}>\r\n        <DndProvider manager={manager.current.dragDropManager as any}>\r\n          <Table \r\n            rowKey={e => e.id}\r\n            columns={columns}\r\n            dataSource={lists}\r\n            size=\"small\"\r\n            bordered\r\n            components={components}\r\n            onRow={(record, index): any => ({\r\n              index,\r\n              moveRow,\r\n            })}\r\n          />\r\n        </DndProvider>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Allocation;","import React, {FC, useState, useEffect} from 'react'\r\nimport {Dropdown, Menu, Avatar} from 'antd'\r\nimport {UserOutlined} from '@ant-design/icons'\r\nimport styles from './index.module.css'\r\nimport proxyRequest from '../../utils/request';\r\nimport { baseUrl } from '../../utils/baseServer';\r\n\r\nconst UserFn: FC = () => {\r\n\r\n  const [user, setUser] = useState({name: \"\"})\r\n\r\n  const handleMenuClick = () => {\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    proxyRequest.get(baseUrl + `/user`, {id: 1}).then(function(res: any) {\r\n      if (res) {\r\n        setUser(res.data)\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const ToggleMenu = (\r\n    <Menu onClick={handleMenuClick}>\r\n      <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n        1st menu item\r\n      </Menu.Item>\r\n      <Menu.Item key=\"2\" icon={<UserOutlined />}>\r\n        2nd menu item\r\n      </Menu.Item>\r\n      <Menu.Item key=\"3\" icon={<UserOutlined />}>\r\n        3rd menu item\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n  return (\r\n    <div className={styles.header_right}>\r\n      <Dropdown overlay={ToggleMenu} className={styles.user_dropdown} placement=\"bottomCenter\">\r\n        <div>\r\n          <Avatar icon={<UserOutlined />} />\r\n          <span className={styles.username}>{user.name}</span>\r\n        </div>\r\n      </Dropdown>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserFn;","import React, {FC, useState} from 'react';\r\nimport { Layout, Menu, Row, Col } from 'antd';\r\nimport './index.css';\r\nimport '../App.css';\r\nimport Viewable from '../Components/Viewable';\r\nimport ListsPage from '../Components/ListsPage';\r\nimport Allocation from '../Components/Allocation';\r\nimport UserFn from '../Components/UserFn';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\n\r\ninterface ContentComponentProps {\r\n  contentCode: string;\r\n  switchTab: any;\r\n}\r\n\r\nfunction ContentComponent({contentCode, switchTab}: ContentComponentProps) {\r\n  if (contentCode === \"1\") {\r\n    return (\r\n      <ListsPage contentCode={contentCode} switchTab={switchTab} />\r\n    )\r\n  } else if (contentCode === \"2\") {\r\n    return (\r\n      <Allocation />\r\n    )\r\n  } else if (contentCode === \"3\") {\r\n    return (\r\n      <Viewable />\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nconst AYDemo: FC = (props) => {\r\n  const {children} = props;\r\n  const [menu, setMenu] = useState(['1']);\r\n\r\n  function selectMenu(arg: any) {\r\n    const { keyPath } = arg;\r\n    // setMenu(() => keyPath)\r\n\r\n  }\r\n\r\n  return (\r\n    <Layout className=\"home_page\">\r\n      <Header className=\"header\">\r\n        <Row>\r\n          <Col flex={4} style={{display: \"flex\"}}>\r\n            <div className=\"logo\">冶控填报平台</div>\r\n            <Menu theme=\"dark\" mode=\"horizontal\" onClick={selectMenu} selectedKeys={menu} defaultSelectedKeys={['1']}>\r\n              <Menu.Item key=\"1\" icon={<VideoCameraOutlined />}>\r\n                <Link to='/'>列表页</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"2\" icon={<UserOutlined />}>\r\n                <Link to='/allocation'>配置页</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"3\" icon={<UserOutlined />}>\r\n                <Link to='/view'>填报页</Link>\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Col>\r\n          <Col flex={1}>\r\n            <UserFn />\r\n          </Col>\r\n        </Row>\r\n      </Header>\r\n      <Content\r\n        className=\"site-layout-background\"\r\n        style={{\r\n          margin: '24px 16px',\r\n          padding: 24,\r\n          minHeight: 280,\r\n        }}\r\n      >\r\n        {children}\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}> ©2020 Created by MG</Footer>\r\n      </Layout>\r\n  )\r\n}\r\n\r\nexport default AYDemo;","import React, {FC, useState, useEffect} from 'react';\r\nimport {\r\n  Select,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Popconfirm,\r\n  Row,\r\n  Col\r\n} from 'antd';\r\nimport { baseUrl } from '../../utils/baseServer';\r\nimport proxyRequest from '../../utils/request';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Layouts from '../../Layout'\r\n\r\nconst { Option } = Select;\r\n\r\ninterface listsPageProps {\r\n  contentCode: string;\r\n  switchTab: any;\r\n}\r\n\r\nconst ListsPage: FC = function(prop) {\r\n  const history = useHistory();\r\n  const [form] = Form.useForm();\r\n  const [business, setBusiness] = useState([]);\r\n  const [formList, setFormList] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [listParams, setListParams] = useState({page: 1, pageSize: 10})\r\n\r\n  useEffect(() => {\r\n    proxyRequest.get(baseUrl + `/business`, {}).then(function(res: any) {\r\n      if (res) {\r\n        setBusiness(res.data)\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleGetFormList(listParams)\r\n  }, [listParams])\r\n\r\n\r\n  const handleGetFormList = (p: any) => {\r\n    proxyRequest.get(baseUrl + \"/getFormList\", p)\r\n    .then(function(res: any) {\r\n      if (res && res.code === 0) {\r\n        setFormList(res.data)\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * 删除表单\r\n   */\r\n  const delForm = (val: any) => {\r\n    const pa = JSON.parse(JSON.stringify(listParams));\r\n    // pa.id = val.id;\r\n    proxyRequest.post(baseUrl + \"/delForm\", {id: val.id})\r\n    .then(function(res: any) {\r\n      if (res.code === 0) {\r\n        message.info('删除成功！');\r\n        handleGetFormList(pa);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleAllocation = (record: any) => {\r\n    history.push('/allocation?formId='+ record.id)\r\n  }\r\n\r\n  const handleInput = (record: any) => {\r\n    history.push('/view?formId='+ record.id)\r\n  }\r\n\r\n  const handleEditRow = (val: any) => {\r\n    console.log(val)\r\n    setIsModalVisible(true);\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: '表单名',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text: string, record: any) => (\r\n        <Button \r\n          size=\"small\"\r\n          onClick={() => handleEditRow(record)}\r\n          type=\"link\"\r\n        >\r\n          {text}\r\n        </Button>\r\n      ),\r\n    },\r\n    {\r\n      title: '创建时间',\r\n      dataIndex: 'created_date',\r\n      key: 'created_date',\r\n    },\r\n    {\r\n      title: '所属业务',\r\n      key: 'remark',\r\n      render: (text: string, record: any) => {\r\n        if (business.length) {\r\n          const cur: any = business.filter((item: any) => item.id === record.fid);\r\n          if (cur.length) {\r\n            return cur[0].name\r\n          }\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: '备注',\r\n      dataIndex: 'remark',\r\n      key: 'remark',\r\n    },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text: string, record: any) => (\r\n        <Space size=\"middle\">\r\n          <a onClick={() => handleAllocation(record)}>配置</a>\r\n          <a onClick={() => handleInput(record)}>填报</a>\r\n          <Popconfirm\r\n            title=\"确定删除?\"\r\n            onConfirm={() => delForm(record)}\r\n            okText=\"确定\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <a>删除</a>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const handleChange = (e:any) => {\r\n    const pa = JSON.parse(JSON.stringify(listParams));\r\n    pa.id = e;\r\n    proxyRequest.get(baseUrl + \"/getFormList\", pa)\r\n      .then(function(res: any) {\r\n        if (res && res.code === 0) {\r\n          setFormList(res.data)\r\n        }\r\n      });\r\n  }\r\n  /**\r\n   * 新增表单是选择所属业务\r\n   */\r\n  const selectBusinessForAdd = () => {\r\n\r\n  }\r\n  /**\r\n   * 新增表单\r\n   */\r\n  const addForm = () => {\r\n    setIsModalVisible(true)\r\n  };\r\n  /**\r\n   * 确认提交表单\r\n   */\r\n  const handleOk = () => {\r\n    form.submit();\r\n    // setIsModalVisible(false);\r\n  };\r\n  /**\r\n   * 取消关闭表单\r\n   */\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const formItemLayout = {\r\n    labelCol: {span: 6},\r\n    wrapperCol: {span: 18}\r\n  }\r\n  /**\r\n   * 提交\r\n   */\r\n  const onFinish = (values: any) => {\r\n    setLoading(true);\r\n    proxyRequest.post(baseUrl + \"/addForm\", values)\r\n    .then(function(res: any) {\r\n      if (res.code === 0) {\r\n        message.info('新增成功！');\r\n        form.resetFields();\r\n        setLoading(false);\r\n        setIsModalVisible(false);\r\n        handleGetFormList(listParams);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Layouts>\r\n        <div style={{background: \"#fff\", padding: 15, marginBottom: 20}}>\r\n          <Form\r\n            form={form}\r\n            name=\"advanced_search\"\r\n            className=\"ant-advanced-search-form\"\r\n            onFinish={onFinish}\r\n          >\r\n            <Row gutter={24}>\r\n              <Col span={8}>\r\n                <Form.Item label=\"按业务\">\r\n                  <Select style={{ width: 120, marginBottom: 12 }} onChange={handleChange} placeholder=\"请选择业务\">\r\n                    {\r\n                      business.map((item: any) => {\r\n                        return <Option key={item.id} value={item.key}>{item.name}</Option>\r\n                      })\r\n                    }\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24} style={{ textAlign: 'right' }}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Search\r\n                </Button>\r\n                <Button\r\n                  style={{ margin: '0 8px' }}\r\n                  onClick={() => {\r\n                    // form.resetFields();\r\n                  }}\r\n                >\r\n                  Clear\r\n                </Button>\r\n                {/* <a\r\n                  style={{ fontSize: 12 }}\r\n                  onClick={() => {\r\n                    setExpand(!expand);\r\n                  }}\r\n                >\r\n                  {expand ? <UpOutlined /> : <DownOutlined />} Collapse\r\n                </a> */}\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        <div style={{padding: 15, background: \"#fff\"}}>\r\n          <Button style={{marginBottom: 12}} onClick={addForm} type=\"primary\">新建</Button>\r\n          <Modal \r\n            title=\"新增表单\"\r\n            visible={isModalVisible}\r\n            onOk={handleOk} \r\n            onCancel={handleCancel}\r\n            footer={[\r\n              <Button key=\"back\" onClick={handleCancel}>\r\n                取消\r\n              </Button>,\r\n              <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}>\r\n                新增\r\n              </Button>,\r\n            ]}  \r\n          >\r\n            <Form\r\n              name=\"validate_other\"\r\n              {...formItemLayout}\r\n              onFinish={onFinish}\r\n              form={form}\r\n            >\r\n              <Form.Item \r\n                label=\"所属业务\"\r\n                name=\"business\"\r\n                rules={[{ required: true, message: '请选择所属业务!' }]}\r\n              >\r\n                <Select onChange={selectBusinessForAdd} placeholder=\"请选择业务\">\r\n                  {\r\n                    business.map((item: any) => {\r\n                      return <Option key={item.id} value={item.key}>{item.name}</Option>\r\n                    })\r\n                  }\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item label=\"表单名\" name=\"name\" rules={[{ required: true }]}>\r\n                <Input placeholder=\"请输入表单名\" />\r\n              </Form.Item>\r\n            </Form>\r\n          </Modal>\r\n          <Table \r\n            rowKey={e => e.id}\r\n            columns={columns}\r\n            dataSource={formList}\r\n            size=\"small\"\r\n            bordered\r\n          />\r\n        </div>\r\n      </Layouts>\r\n      </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ListsPage;","import React, {FC, useState, useEffect} from 'react';\r\nimport {\r\n  Input,\r\n  Form,\r\n  Radio,\r\n  InputNumber,\r\n  Select,\r\n  Button,\r\n  message,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Table\r\n} from 'antd';\r\nimport { baseUrl } from '../../utils/baseServer';\r\nimport proxyRequest from '../../utils/request';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Layouts from '../../Layout'\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nconst { Option } = Select;\r\n\r\nconst Viewable: FC = function() {\r\n\r\n  let location = useLocation();\r\n  let [lists, setLists] = useState([]);\r\n  let [dataSource, setDataSource] = useState([]);\r\n  let [formInfo, setFormInfo] = useState({name: \"\"});\r\n  const [update, setUpdate] = useState(false);\r\n  const [formId, setFormId] = useState(\"\");\r\n  const [listParams, setListParams] = useState({page: 1, pageSize: 30});\r\n\r\n  // useEffect(() => {\r\n  //   if (formId) {\r\n  //     proxyRequest.get(baseUrl + `/getFormInfo`, {id: formId}).then(function(res: any) {\r\n  //       if (res) {\r\n  //         setFormInfo(res.data)\r\n  //       }\r\n  //     });\r\n  //   }\r\n  // }, [formId])\r\n\r\n  useEffect(() => {\r\n    const query = new URLSearchParams(location.search);\r\n    const fId = query.get(\"formId\")\r\n    let pa = JSON.parse(JSON.stringify(listParams));\r\n    if (fId) {\r\n      pa.formId = fId;\r\n      setFormId(fId)\r\n    }\r\n\r\n    if (formId) {\r\n\r\n      new Promise<void>((resolve, reject) => {\r\n        proxyRequest.get(baseUrl + `/lists`, pa).then(function(res: any) {\r\n          if (res) {\r\n            setLists(res.data)\r\n            resolve()\r\n          }\r\n        })\r\n      })\r\n      .then(() => {\r\n        proxyRequest.get(baseUrl + `/getFormData`, {id: formId}).then(function(res: any) {\r\n          let tempArr = [], newArr: any = [];\r\n          if (res) {\r\n            \r\n            for (let i = 0; i < res.data.length; i++) {\r\n              const rowId = res.data[i].row_id;\r\n              \r\n              if (tempArr.indexOf(rowId) === -1) {\r\n                tempArr.push(rowId);\r\n              }\r\n\r\n              let index = tempArr.indexOf(rowId);\r\n  \r\n              if (index >= 0) {\r\n                newArr[index] = newArr[index] || {rowId};\r\n\r\n                newArr[index][res.data[i].field_name] = res.data[i].value;\r\n              }\r\n            }\r\n            \r\n            setDataSource(newArr)\r\n          }\r\n        });\r\n      })\r\n      \r\n      proxyRequest.get(baseUrl + `/getFormInfo`, {id: formId}).then(function(res: any) {\r\n        if (res) {\r\n          setFormInfo(res.data)\r\n        }\r\n      });\r\n\r\n    }\r\n  }, [formId, listParams, update])\r\n\r\n  // useEffect(() => {\r\n  //   const {search = \"\"} = history.location;\r\n  //   let pa = JSON.parse(JSON.stringify(listParams));\r\n  //   if (search) {\r\n  //     const q1 = search.split(\"?\");\r\n  //     if (q1.length > 1) {\r\n  //       // TODO: 支持一个参数formId\r\n  //       const q2 = q1[1].split(\"=\");\r\n  //       if (q2.length > 1) {\r\n  //         pa.formId = q2[1];\r\n  //         setFormId(q2[1])\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   proxyRequest.get(baseUrl + `/lists`, pa).then(function(res: any) {\r\n  //     if (res) {\r\n  //       setLists(res.data)\r\n  //     }\r\n  //   });\r\n\r\n  // }, [listParams]);\r\n\r\n  const onFinish = (values: any) => {\r\n    values.formId = formId;\r\n    values.uuid = uuidv4();\r\n    proxyRequest.post(baseUrl + \"/save\", values)\r\n      .then(function(res: any) {\r\n        if (res && res.code === 0) {\r\n          message.info('保存成功！');\r\n          setUpdate(!update)\r\n        }\r\n      });\r\n  };\r\n\r\n  const formItemLayout = {\r\n    labelCol: {span: 6},\r\n    wrapperCol: {span: 18}\r\n  }\r\n\r\n  const handleDelData = (e: any) : void => {\r\n    proxyRequest.post(baseUrl + \"/delData\", {id: e.rowId})\r\n    .then(function(res: any) {\r\n      if (res && res.code === 0) {\r\n        message.info('删除成功！');\r\n        setUpdate(!update)\r\n      }\r\n    });\r\n  }\r\n\r\n  interface Action {\r\n    title: string;\r\n    key: string;\r\n    dataIndex?: string;\r\n    render?: (s: string, r: any) => any\r\n  }\r\n  const columns = lists.map((item: any): Action => {\r\n    return {\r\n      title: item.name,\r\n      dataIndex: item.field,\r\n      key: item.id,\r\n    }\r\n  }).concat({\r\n    title: \"操作\", \r\n    key: \"action\",\r\n    render: (text, record) => {\r\n      return <a onClick={() => handleDelData(record)}>删除</a>\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Layouts>\r\n      <div style={{background: \"#fff\", padding: \"12px 15px\", marginBottom: 20}}>\r\n        <Form\r\n          name=\"validate_other\"\r\n          {...formItemLayout}\r\n          onFinish={onFinish}\r\n        >\r\n          <Row gutter={24}>\r\n          {\r\n                lists.map(function(item: any) {\r\n                  let options = [];\r\n                  if (item.options) {\r\n                    options = item.options.split(\"/\");\r\n                  }\r\n                  // \r\n                  let rules = [];\r\n                  if (item.isRequired === '1') {\r\n                    rules.push({\r\n                      required: true, \r\n                      message: item.placeholder\r\n                    })\r\n                  }\r\n                  //\r\n                  if (item.code === \"1\") {\r\n                    return (\r\n                      <Col span={8} key={item.id}>\r\n                        <Form.Item\r\n                          initialValue={item.default_value}\r\n                          name={item.field}\r\n                          rules={rules}\r\n                          label={item.name}\r\n                        >\r\n                          <Input placeholder={item.placeholder} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    )\r\n                  }\r\n                  if (item.code === \"2\") {\r\n                    return (\r\n                      <Col span={8} key={item.id}>\r\n                        <Form.Item\r\n                          name={item.field}\r\n                          label={item.name}\r\n                          hasFeedback\r\n                          initialValue={item.default_value}\r\n                          rules={rules}\r\n                        >\r\n                          <Select placeholder={item.placeholder}>\r\n                            {\r\n                              options.map((v:string, k:number) => {\r\n                              return <Option key={k} value={k}>{v}</Option>\r\n                              })\r\n                            }\r\n                          </Select>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    )\r\n                  }\r\n                  if (item.code === \"3\") {\r\n                    return (\r\n                      <Col span={8} key={item.id}>\r\n                        <Form.Item label={item.name}>\r\n                          <Form.Item name={item.field} rules={rules} initialValue={item.default_value} noStyle>\r\n                            <InputNumber style={{width: \"100%\"}} placeholder={item.placeholder} min={0} />\r\n                          </Form.Item>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    )\r\n                  }\r\n                  if (item.code === \"4\") {\r\n                    return (\r\n                      <Col span={8} key={item.id}>\r\n                        <Form.Item name={item.field} initialValue={item.default_value} rules={rules} label={item.name}>\r\n                          <Radio.Group>\r\n                            {\r\n                              options.map((v:string, k:number) => {\r\n                              return <Radio key={k} value={k}>{v}</Radio>\r\n                              })\r\n                            }\r\n                          </Radio.Group>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    )\r\n                  }\r\n                  if (item.code === \"5\") {\r\n                    return (\r\n                      <Col span={8} key={item.id}>\r\n                        <Form.Item label={item.name}>\r\n                          <span className=\"ant-form-text\">纯文本</span>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    )\r\n                  }\r\n                  return null\r\n                })\r\n              }\r\n          </Row>\r\n          <Row>\r\n            <Col span={24}>\r\n              <Button type=\"primary\" style={{float: \"right\"}} htmlType=\"submit\">提交</Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n\r\n      <div style={{background: \"#fff\", padding: \"12px 15px\"}}>\r\n        <Divider style={{marginBottom: 30, fontSize: 20}}>{formInfo.name}</Divider>\r\n        <Table \r\n          rowKey={(e: any) => e.rowId}\r\n          columns={columns}\r\n          dataSource={dataSource}\r\n          size=\"small\"\r\n          bordered\r\n        />\r\n      </div>\r\n    </Layouts>\r\n  )\r\n}\r\n\r\nexport default Viewable;","import React, {FC, useEffect, useState, useRef, useCallback} from 'react';\r\nimport { Table, Space, Button, Form, Input, Select, Row, Col, Checkbox, message, Divider, Tooltip } from 'antd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport { DndProvider, useDrag, useDrop, createDndContext } from 'react-dnd';\r\nimport updateImmutability from 'immutability-helper';\r\nimport { baseUrl } from '../../utils/baseServer';\r\nimport proxyRequest from '../../utils/request';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Layouts from '../../Layout'\r\nimport {\r\n  DeleteOutlined,\r\n  PlusOutlined,\r\n  SearchOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Option = Select.Option;\r\nconst RNDContext = createDndContext(HTML5Backend);\r\nconst type = 'DragableBodyRow';\r\n\r\nconst DragableBodyRow = (value: { [x: string]: any; index: any; moveRow: any; className: any; style: any; }) => {\r\n  const { index, moveRow, className, style, ...restProps } = value;\r\n  const ref = React.useRef();\r\n  const [{ isOver, dropClassName }, drop] = useDrop({\r\n    accept: type,\r\n    collect: monitor => {\r\n      const { index: dragIndex } = monitor.getItem() || {};\r\n      if (dragIndex === index) {\r\n        return {};\r\n      }\r\n      return {\r\n        isOver: monitor.isOver(),\r\n        dropClassName: dragIndex < index ? ' drop-over-downward' : ' drop-over-upward',\r\n      };\r\n    },\r\n    drop: (item: any) => {\r\n      moveRow(item.index, index);\r\n    },\r\n  });\r\n  const [, drag] = useDrag({\r\n    item: { type, index },\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n  drop(drag(ref));\r\n  return (\r\n    <tr\r\n      ref={ref as any}\r\n      className={`${className}${isOver ? dropClassName : ''}`}\r\n      style={{ cursor: 'move', ...style }}\r\n      {...restProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst Allocation: FC = function(props) {\r\n  let location = useLocation();\r\n  const [form] = Form.useForm();\r\n  const [lists, setLists] = useState([]);\r\n  const [listParams, setListParams] = useState({page: 1, pageSize: 30});\r\n  const [update, setUpdate] = useState(false);\r\n  const [business, setBusiness] = useState([]);\r\n  const [controlerType, setControlerType] = useState(\"\");\r\n  const [controlerName, setControlerName] = useState(\"\");\r\n  const [controlerPlaceholder, setControlerPlaceholder] = useState(\"\");\r\n  const [controlerDefaultValue, setControlerDefaultValue] = useState(\"\");\r\n  const [formId, setFormId] = useState(\"\");\r\n\r\n  useEffect(function() {\r\n    const query = new URLSearchParams(location.search);\r\n    const fId = query.get(\"formId\")\r\n    let pa = JSON.parse(JSON.stringify(listParams));\r\n    if (fId) {\r\n      pa.formId = fId;\r\n      setFormId(fId)\r\n    }\r\n    proxyRequest.get(baseUrl + `/lists`, pa).then(function(res: any) {\r\n      if (res) {\r\n        setLists(res.data)\r\n      }\r\n    });\r\n  }, [listParams, update]);\r\n\r\n  useEffect(function() {\r\n    proxyRequest.get(baseUrl + `/business`, {}).then(function(res: any) {\r\n      if (res) {\r\n        setBusiness(res.data)\r\n      }\r\n    });\r\n    \r\n  }, [])\r\n\r\n  const columns = [\r\n    {\r\n      title: '序号',\r\n      dataIndex: 'sort',\r\n      key: 'sort',\r\n      render: (text: any) => text + 1,\r\n    },\r\n    {\r\n      title: '控件名',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text: any) => (\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n        >\r\n          {text}\r\n        </Button>\r\n      )\r\n    },\r\n    {\r\n      title: '控件类型',\r\n      dataIndex: 'code',\r\n      key: 'code',\r\n    },\r\n    {\r\n      title: '是否必填',\r\n      dataIndex: 'isRequired',\r\n      key: 'isRequired',\r\n      render: (text: any) => text === '1' ? \"是\" : \"否\"\r\n    },\r\n    {\r\n      title: '提示占位符',\r\n      dataIndex: 'placeholder',\r\n      key: 'placeholder',\r\n    },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text: string, record: any) => (\r\n        <Space size=\"middle\">\r\n          <Tooltip title=\"删除\">\r\n            <Button \r\n              danger\r\n              onClick={() => delData(record)}\r\n              shape=\"circle\"\r\n              size=\"small\"\r\n              icon={<DeleteOutlined />}\r\n            />\r\n          </Tooltip>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const delData = (record: any) => { \r\n    proxyRequest.get(baseUrl + \"/delete\", {id: record.id})\r\n    .then(function(res: any) {\r\n      if (res.code === 0) {\r\n        message.info('删除成功！');\r\n        setUpdate(!update)\r\n      }\r\n    });\r\n  }\r\n\r\n  const formItemLayout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 18 },\r\n  };\r\n  const tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 6,\r\n        offset: 0,\r\n      },\r\n      sm: {\r\n        span: 6,\r\n        offset: 2,\r\n      },\r\n    },\r\n  };\r\n  \r\n  const onFinish = (values: any) => {\r\n    console.log('Received values of form: ', values);\r\n    let obj: any = {}\r\n    Object.keys(values).forEach(item => {\r\n      if (values[item]) {\r\n        obj[item] = values[item]\r\n      }\r\n      if (values.required) {\r\n        obj.required = '1'\r\n      }\r\n    })\r\n    obj.sort = lists.length;\r\n    obj.formId = formId;\r\n    proxyRequest.post(baseUrl + \"/add\", obj)\r\n    .then(function(res: any) {\r\n      if (res.code === 0) {\r\n        message.info('添加成功！');\r\n        form.resetFields();\r\n        setUpdate(!update)\r\n      }\r\n    });\r\n  };\r\n\r\n  // const handleChange = (e:any) => {\r\n   \r\n  // }\r\n\r\n  const changeSelect = (value: string, option: any) => {\r\n    setControlerType(value)\r\n  }\r\n\r\n  const components = {\r\n    body: {\r\n      row: (vaue: any) => DragableBodyRow(vaue),\r\n    },\r\n  };\r\n\r\n  const moveRow = useCallback(\r\n    (dragIndex, hoverIndex) => {\r\n      const dragRow = lists[dragIndex];\r\n      const originRow: any = lists[dragIndex];\r\n      const targetRow: any = lists[hoverIndex];\r\n      const param = {\r\n        originId: originRow.id,\r\n        originSort: originRow.sort,\r\n        targetId: targetRow.id,\r\n        targetSort: targetRow.sort\r\n      }\r\n      proxyRequest.post(baseUrl + \"/sort\", param)\r\n      .then(function(res: any) {\r\n        if (res.code === 0) {\r\n          message.info('OK！');\r\n          setUpdate(!update)\r\n          setLists(\r\n            updateImmutability(lists, {\r\n              $splice: [\r\n                [dragIndex, 1],\r\n                [hoverIndex, 0, dragRow],\r\n              ],\r\n            }),\r\n          );\r\n        }\r\n      });\r\n    },\r\n    [lists, update],\r\n  );\r\n\r\n  const manager = useRef(RNDContext);\r\n\r\n  return (\r\n    <Layouts>\r\n      <div style={{background: \"#fff\", padding: 15, marginBottom: 20}}>\r\n        {/* 表单 */}\r\n        <Divider orientation=\"left\">控件属性</Divider>\r\n        <Form\r\n          name=\"validate_other\"\r\n          {...formItemLayout}\r\n          onFinish={onFinish}\r\n          form={form}\r\n        >\r\n          <Row>\r\n            {/* <Col span={8}>\r\n              <Form.Item label=\"业务\">\r\n                <Select onChange={handleChange} placeholder=\"请选择业务\">\r\n                  {\r\n                    business.map((item: any) => {\r\n                      return <Option key={item.id} value={item.key}>{item.name}</Option>\r\n                    })\r\n                  }\r\n                </Select>\r\n              </Form.Item>\r\n            </Col> */}\r\n            <Col span={8}>\r\n              <Form.Item \r\n                label=\"字段标签\"\r\n              >\r\n                <Form.Item name=\"name\" noStyle>\r\n                  <Input value={controlerName} placeholder=\"请输入字段标签\" />\r\n                </Form.Item>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Form.Item \r\n                name=\"field\"\r\n                label=\"字段\"\r\n                hasFeedback\r\n                rules={[{required: true, message: \"请输入字段\"}]}\r\n              >\r\n                <Input placeholder=\"请输入字段\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Form.Item \r\n                label=\"占位提示\"\r\n              >\r\n                <Form.Item name=\"placeholder\" noStyle>\r\n                  <Input value={controlerPlaceholder} placeholder=\"请输入占位提示\" />\r\n                </Form.Item>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Form.Item \r\n                label=\"默认值\"\r\n              >\r\n                <Form.Item name=\"defaultValue\" noStyle>\r\n                  <Input value={controlerDefaultValue} placeholder=\"请输入默认值\" />\r\n                </Form.Item>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Form.Item\r\n                name=\"select\"\r\n                label=\"表单控件\"\r\n                hasFeedback\r\n                rules={[{ required: true, message: '请选择控件类型!' }]}\r\n              >\r\n                <Select onChange={changeSelect} placeholder=\"请选择控件类型\">\r\n                  <Option value=\"3\">数字</Option>\r\n                  <Option value=\"1\">文本</Option>\r\n                  <Option value=\"2\">下拉选择</Option>\r\n                  <Option value=\"4\">单选按钮</Option>\r\n                  <Option value=\"5\">纯文本</Option>\r\n                </Select>\r\n              </Form.Item>  \r\n            </Col>\r\n            {\r\n              [\"2\", \"4\"].includes(controlerType)\r\n              ? (\r\n                <Col span={8}>\r\n                  <Form.Item \r\n                    label=\"控件选项\"\r\n                  >\r\n                    <Form.Item \r\n                      name=\"options\"\r\n                      noStyle\r\n                      hasFeedback\r\n                      rules={[{ required: true, message: '请输入选项' }]}\r\n                    >\r\n                      <Input placeholder=\"输入选项并用'/'隔开\" />\r\n                      {/* <Input addonAfter={<PlusOutlined />} placeholder=\"输入选项并用'/'隔开\" /> */}\r\n                    </Form.Item>\r\n                  </Form.Item>\r\n                </Col>\r\n              )\r\n              : null\r\n            }\r\n            <Col span={8}>\r\n              <Form.Item {...tailFormItemLayout} name=\"required\" valuePropName=\"checked\">\r\n                <Checkbox>\r\n                  是否必填\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Form.Item>\r\n            <Button type=\"primary\" icon={<PlusOutlined />} htmlType=\"submit\">新增</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n      <div style={{background: \"#fff\", padding: 15}}>\r\n        <DndProvider manager={manager.current.dragDropManager as any}>\r\n          <Table \r\n            rowKey={e => e.id}\r\n            columns={columns}\r\n            dataSource={lists}\r\n            size=\"small\"\r\n            bordered\r\n            components={components}\r\n            onRow={(record, index): any => ({\r\n              index,\r\n              moveRow,\r\n            })}\r\n          />\r\n        </DndProvider>\r\n      </div>\r\n    </Layouts>\r\n  )\r\n}\r\n\r\nexport default Allocation;","import * as React from 'react';\r\nimport { Route, Switch, Redirect, useLocation } from 'react-router-dom'\r\nimport App from '../App';\r\nimport FormLists from '../pages/FormLists/index'\r\nimport View from '../pages/Viewable/index'\r\nimport Allocation from '../pages/Allocation/index'\r\n\r\nexport default function Routes() {\r\n  \r\n  return <Switch>\r\n      <Route exact path='/'>\r\n        <FormLists />\r\n      </Route>\r\n      <Route exact path='/view'>\r\n        <View />\r\n      </Route>\r\n      <Route exact path='/allocation'>\r\n        <Allocation />\r\n      </Route>\r\n    </Switch>\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\nimport reportWebVitals from './reportWebVitals';\nimport Routes from './routes'\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}